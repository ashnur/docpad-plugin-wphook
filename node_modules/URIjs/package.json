{
  "name": "URIjs",
  "version": "1.8.1",
  "title": "URI.js - Mutating URLs",
  "author": {
    "name": "Rodney Rehm",
    "url": "http://rodneyrehm.de"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license"
    },
    {
      "type": "GPL",
      "url": "http://opensource.org/licenses/GPL-3.0"
    }
  ],
  "description": "URI.js is a Javascript library for working with URLs.",
  "keywords": [
    "uri",
    "url",
    "urn",
    "uri mutation",
    "url mutation",
    "uri manipulation",
    "url manipulation",
    "uri template",
    "url template",
    "unified resource locator",
    "unified resource identifier",
    "query string",
    "RFC 3986",
    "RFC3986",
    "RFC 6570",
    "RFC6570"
  ],
  "categories": [
    "Parsers & Compilers",
    "Utilities"
  ],
  "main": "./src/URI",
  "homepage": "http://medialize.github.com/URI.js/",
  "contributors": [
    {
      "name": "Francois-Guillaume Ribreau",
      "email": "npm@fgribreau.com",
      "url": "http://fgribreau.com"
    }
  ],
  "files": [
    "src/URI.js",
    "src/IPv6.js",
    "src/SecondLevelDomains.js",
    "src/punycode.js",
    "src/URITemplate.js",
    "src/jquery.URI.js"
  ],
  "jam": {
    "main": "src/URI.js",
    "dependencies": {
      "jquery": ">=1.7.0"
    },
    "include": [
      "src/URI.js",
      "src/IPv6.js",
      "src/SecondLevelDomains.js",
      "src/punycode.js",
      "src/URITemplate.js",
      "src/jquery.URI.js"
    ]
  },
  "readme": "# URI.js #\n\n* [About](http://medialize.github.com/URI.js/)\n* [Understanding URIs](http://medialize.github.com/URI.js/about-uris.html)\n* [Documentation](http://medialize.github.com/URI.js/docs.html)\n* [jQuery URI Plugin](http://medialize.github.com/URI.js/jquery-uri-plugin.html)\n* [Author](http://rodneyrehm.de/en/)\n\n---\n\nI always want to shoot myself in the head when looking at code like the following:\n\n```javascript\nvar url = \"http://example.org/foo?bar=baz\",\n    separator = url.indexOf('?') > -1 ? '&' : '?';\n\nurl += separator + encodeURIComponent(\"foo\") + \"=\" + encodeURIComponent(\"bar\");\n```\n\nI still can't believe javascript - the f**ing backbone-language of the web - doesn't offer an API for mutating URLs. Browsers (Firefox) don't expose the `Location` object (the structure behind window.location). Yes, one could think of [decomposed IDL attributes](http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#url-decomposition-idl-attributes) as a native URL management library. But it relies on the DOM element &lt;a&gt;, it's slow and doesn't offer any convenience at all.\n\nHow about a nice, clean and simple API for mutating URIs:\n\n```javascript\nvar url = new URI(\"http://example.org/foo?bar=baz\");\nurl.addQuery(\"foo\", \"bar\");\n```\n\nURI.js is here to help with that.\n\n\n## API Example ##\n\n```javascript\n// mutating URLs\nURI(\"http://example.org/foo.html?hello=world\")\n    .username(\"rodneyrehm\")\n        // -> http://rodneyrehm@example.org/foo.html?hello=world\n    .username(\"\")\n        // -> http://example.org/foo.html?hello=world\n    .directory(\"bar\")\n        // -> http://example.org/bar/foo.html?hello=world\n    .suffix(\"xml\")\n        // -> http://example.org/bar/foo.xml?hello=world\n    .query(\"\")\n        // -> http://example.org/bar/foo.xml\n    .tld(\"com\")\n        // -> http://example.com/bar/foo.xml\n    .query({ foo: \"bar\", hello: [\"world\", \"mars\"] });\n        // -> http://example.com/bar/foo.xml?foo=bar&hello=world&hello=mars\n\n// cleaning things up\nURI(\"?&foo=bar&&foo=bar&foo=baz&\")\n    .normalizeQuery();\n        // -> ?foo=bar&foo=baz\n\n// working with relative paths\nURI(\"/foo/bar/baz.html\")\n    .relativeTo(\"/foo/bar/world.html\");\n        // -> ./baz.html\n\nURI(\"/foo/bar/baz.html\")\n    .relativeTo(\"/foo/bar/sub/world.html\")\n        // -> ../baz.html\n    .absoluteTo(\"/foo/bar/sub/world.html\");\n        // -> /foo/bar/baz.html\n\n// URI Templates\nURI.expand(\"/foo/{dir}/{file}\", {\n  dir: \"bar\",\n  file: \"world.html\"\n});\n// -> /foo/bar/world.html\n```\n\nSee the [About Page](http://medialize.github.com/URI.js/) and [API Docs](http://medialize.github.com/URI.js/docs.html) for more stuff.\n\n## Using URI.js ##\n\n### Browser ###\n\nI guess you'll manage to use the [build tool](http://medialize.github.com/URI.js/build.html) or follow the [instructions below](#minify) to combine and minify the various files into URI.min.js - and I'm fairly certain you know how to `<script src=\".../URI.min.js\"></script>` that sucker, too.\n\n### Node.js and NPM ###\n\nInstall with `npm install URIjs` or add `\"URIjs\"` to the dependencies in your `package.json`.\n\n```javascript\n// load URI.js\nvar URI = require('URIjs');\n// load an optional module (e.g. URITemplate)\nvar URITemplate = require('URIjs/src/URITemplate');\n\nURI(\"/foo/bar/baz.html\")\n    .relativeTo(\"/foo/bar/sub/world.html\")\n// -> ../baz.html\n```\n\n### RequireJS ###\n\nClone the URI.js repository or use a package manager to get URI.js into your project. \n\n```javascript\nrequire.config({\n    paths: {\n        URIjs: 'where-you-put-uri.js/src'\n    }\n});\n\nrequire(['URIjs/URI'], function(URI) {\n    console.log(\"URI.js and dependencies: \", URI(\"//amazon.co.uk\").is('sld') ? 'loaded' : 'failed');\n});\nrequire(['URIjs/URITemplate'], function(URITemplate) {\n    console.log(\"URITemplate.js and dependencies: \", URITemplate._cache ? 'loaded' : 'failed');\n});\n```\n\n## Minify ##\n\nSee the [build tool](http://medialize.github.com/URI.js/build.html) or use [Google Closure Compiler](http://closure-compiler.appspot.com/home):\n\n```\n// ==ClosureCompiler==\n// @compilation_level SIMPLE_OPTIMIZATIONS\n// @output_file_name URI.min.js\n// @code_url http://medialize.github.com/URI.js/src/IPv6.js\n// @code_url http://medialize.github.com/URI.js/src/punycode.js\n// @code_url http://medialize.github.com/URI.js/src/SecondLevelDomains.js\n// @code_url http://medialize.github.com/URI.js/src/URI.js\n// @code_url http://medialize.github.com/URI.js/src/URITemplate.js\n// ==/ClosureCompiler==\n```\n\n\n## Resources ##\n\nDocuments specifying how URLs work:\n\n* [URL - Living Standard](http://url.spec.whatwg.org/)\n* [RFC 3986 - Uniform Resource Identifier (URI): Generic Syntax](http://tools.ietf.org/html/rfc3986)\n* [RFC 3987 - Internationalized Resource Identifiers (IRI)](http://tools.ietf.org/html/rfc3987)\n* [Punycode: A Bootstring encoding of Unicode for Internationalized Domain Names in Applications (IDNA)](http://tools.ietf.org/html/rfc3492)\n* [application/x-www-form-urlencoded](http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type) (Query String Parameters) and [application/x-www-form-urlencoded encoding algorithm](http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#application/x-www-form-urlencoded-encoding-algorithm)\n\nInformal stuff\n\n* [Parsing URLs for Fun and Profit](http://tools.ietf.org/html/draft-abarth-url-01)\n* [Naming URL components](http://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces)\n\nHow other environments do things\n\n* [Java URI Class](http://docs.oracle.com/javase/7/docs/api/java/net/URI.html)\n* [Java Inet6Address Class](http://docs.oracle.com/javase/1.5.0/docs/api/java/net/Inet6Address.html)\n* [Node.js URL API](http://nodejs.org/docs/latest/api/url.html)\n\n[Discussion on Hacker News](https://news.ycombinator.com/item?id=3398837)\n\n\n### Alternatives ###\n\nIf you don't like URI.js, you may like one of these:\n\n#### URL Manipulation ####\n\n* [The simple <a> URL Mutation \"Hack\"](http://jsfiddle.net/rodneyrehm/KkGUJ/) ([jsPerf comparison](http://jsperf.com/idl-attributes-vs-uri-js))\n* [URL.js](https://github.com/ericf/urljs)\n* [furl (Python)](https://github.com/gruns/furl)\n* [mediawiki Uri](https://svn.wikimedia.org/viewvc/mediawiki/trunk/phase3/resources/mediawiki/mediawiki.Uri.js?view=markup) (needs mw and jQuery)\n* [jurlp](https://github.com/tombonner/jurlp)\n* [jsUri](http://code.google.com/p/jsuri/)\n\n#### URL Parsers ####\n\n* [The simple <a> URL Mutation \"Hack\"](http://jsfiddle.net/rodneyrehm/KkGUJ/) ([jsPerf comparison](http://jsperf.com/idl-attributes-vs-uri-js))\n* [URI Parser](http://blog.stevenlevithan.com/archives/parseuri)\n* [jQuery-URL-Parser](https://github.com/allmarkedup/jQuery-URL-Parser)\n* [Google Closure Uri](http://closure-library.googlecode.com/svn/docs/closure_goog_uri_uri.js.html)\n* [URI.js by Gary Court](https://github.com/garycourt/uri-js)\n\n#### URI Template ####\n\n* [uri-templates](https://github.com/marc-portier/uri-templates) by Marc Portier\n* [URI Template JS](https://github.com/fxa/uritemplate-js) by Franz Antesberger\n* [Temple](https://github.com/brettstimmerman/temple) by Brett Stimmerman\n* ([jsperf comparison](http://jsperf.com/uri-templates/2))\n\n#### Various ####\n\n* [TLD.js](https://github.com/oncletom/tld.js) - second level domain names\n* [Public Suffic](http://mxr.mozilla.org/mozilla-central/source/netwerk/dns/effective_tld_names.dat?raw=1) - second level domain names\n\n## Authors ##\n\n* [Rodney Rehm](https://github.com/rodneyrehm)\n\n\n## Contains Code From ##\n\n* [punycode.js](http://mths.be/punycode) - Mathias Bynens\n* [IPv6.js](http://intermapper.com/support/tools/IPV6-Validator.aspx) - Rich Brown - (rewrite of the original)\n\n\n## License ##\n\nURI.js is published under the [MIT license](http://www.opensource.org/licenses/mit-license) and [GPL v3](http://opensource.org/licenses/GPL-3.0).\n\n\n## Changelog ##\n\n### 1.8.1 (November 15th 2012) ###\n\n* fixing build() to properly omit empty query and fragment ([Issue #53](https://github.com/medialize/URI.js/issues/53))\n\n### 1.8.0 (November 13th 2012) ###\n\n* adding [`.resource()`](http://medialize.github.com/URI.js/docs.html#accessors-resource) as compound of [path, query, fragment]\n* adding jQuery 1.8.x compatibility for jQuery.URI.js (remaining backwards compatibility!)\n* adding default ports for gopher, ws, wss\n* adding [`.duplicateQueryParameters()`](http://medialize.github.com/URI.js/docs.html#setting-duplicateQueryParameters) to control if `key=value` duplicates have to be preserved or reduced ([Issue #51](https://github.com/medialize/URI.js/issues/51))\n* updating [Punycode.js](https://github.com/bestiejs/punycode.js/) to version 1.1.1\n* improving AMD/Node using [UMD returnExports](https://github.com/umdjs/umd/blob/master/returnExports.js) - ([Issue #44](https://github.com/medialize/URI.js/issues/44), [Issue #47](https://github.com/medialize/URI.js/issues/47))\n* fixing `.addQuery(\"empty\")` to properly add `?empty` - ([Issue #46](https://github.com/medialize/URI.js/issues/46))\n* fixing parsing of badly formatted userinfo `http://username:pass:word@hostname`\n* fixing parsing of Windows-Drive-Letter paths `file://C:/WINDOWS/foo.txt`\n* fixing `URI(location)` to properly parse the URL - ([Issue #52](https://github.com/medialize/URI.js/issues/52))\n* fixing type error for fragment abuse demos - ([Issue #50](https://github.com/medialize/URI.js/issues/50))\n* adding documentation for various [encode/decode functions](http://medialize.github.com/URI.js/docs.html#encoding-decoding)\n* adding some pointers on possible problems with URLs to [About URIs](http://medialize.github.com/URI.js/about-uris.html)\n* adding tests for fragment abuse and splitting tests into separate scopes\n* adding meta-data for [Jam](http://jamjs.org/) and [Bower](http://twitter.github.com/bower/)\n\nNote: QUnit seems to be having some difficulties on IE8. While the jQuery-plugin tests fail, the plugin itself works. We're still trying to figure out what's making QUnit \"lose its config state\".\n\n### 1.7.4 (October 21st 2012) ###\n\n* fixing parsing of `/wiki/Help:IPA` - ([Issue #49](https://github.com/medialize/URI.js/issues/49))\n\n### 1.7.3 (October 11th 2012) ###\n\n* fixing `strictEncodeURIComponent()` to properly encode `*` to `%2A`\n* fixing IE9's incorrect report of `img.href` being available - ([Issue #48](https://github.com/medialize/URI.js/issues/48))\n\n### 1.7.2 (August 28th 2012) ###\n\n* fixing SLD detection in [`.tld()`](http://medialize.github.com/URI.js/docs.html#accessors-tld) - `foot.se` would detect `t.se` - ([Issue #42](https://github.com/medialize/URI.js/issues/42))\n* fixing [`.absoluteTo()`](http://medialize.github.com/URI.js/docs.html#absoluteto) to comply with [RFC 3986 Section 5.2.2](http://tools.ietf.org/html/rfc3986#section-5.2.2) - ([Issue #41](https://github.com/medialize/URI.js/issues/41))\n* fixing `location` not being available in non-browser environments like node.js ([Issue #45](https://github.com/medialize/URI.js/issues/45) [grimen](https://github.com/grimen))\n\n### 1.7.1 (August 14th 2012) ###\n\n* fixing [`.segment()`](http://medialize.github.com/URI.js/docs.html#accessors-segment)'s append operation - ([Issue #39](https://github.com/medialize/URI.js/issues/39))\n\n### 1.7.0 (August 11th 2012) ###\n\n* fixing URI() constructor passing of `base` - ([Issue #33](https://github.com/medialize/URI.js/issues/33) [LarryBattle](https://github.com/LarryBattle))\n* adding [`.segment()`](http://medialize.github.com/URI.js/docs.html#accessors-segment) accessor - ([Issue #34](https://github.com/medialize/URI.js/issues/34))\n* upgrading `URI.encode()` to strict URI encoding according to RFC3986\n* adding `URI.encodeReserved()` to exclude reserved characters (according to RFC3986) from being encoded\n* adding [URI Template (RFC 6570)](http://tools.ietf.org/html/rfc6570) support with [`URITemplate()`](http://medialize.github.com/URI.js/uri-template.html)\n\n### 1.6.3 (June 24th 2012) ###\n\n* fixing [`.absoluteTo()`](http://medialize.github.com/URI.js/docs.html#absoluteto) to join two relative paths properly - ([Issue #29](https://github.com/medialize/URI.js/issues/29))\n* adding [`.clone()`](http://medialize.github.com/URI.js/docs.html#clone) to copy an URI instance\n\n### 1.6.2 (June 23rd 2012) ###\n\n* [`.directory()`](http://medialize.github.com/URI.js/docs.html#accessors-directory) now returns empty string if there is no directory\n* fixing [`.absoluteTo()`](http://medialize.github.com/URI.js/docs.html#absoluteto) to join two relative paths properly - ([Issue #29](https://github.com/medialize/URI.js/issues/29))\n\n### 1.6.1 (May 19th 2012) ###\n\n* fixing TypeError on [`.domain()`](http://medialize.github.com/URI.js/docs.html#accessors-domain) with dot-less hostnames - ([Issue #27](https://github.com/medialize/URI.js/issues/27))\n\n### 1.6.0 (March 19th 2012) ###\n\n* adding [URN](http://tools.ietf.org/html/rfc3986#section-3) (`javascript:`, `mailto:`, ...) support\n* adding [`.scheme()`](http://medialize.github.com/URI.js/docs.html#accessors-protocol) as alias of [`.protocol()`](http://medialize.github.com/URI.js/docs.html#accessors-protocol)\n* adding [`.userinfo()`](http://medialize.github.com/URI.js/docs.html#accessors-userinfo) to comply with terminology of [RFC 3986](http://tools.ietf.org/html/rfc3986#section-3.2.1)\n* adding [jQuery Plugin](http://medialize.github.com/URI.js/jquery-uri-plugin.html) `src/jquery.URI.js`\n* fixing relative scheme URLs - ([Issue #19](https://github.com/medialize/URI.js/issues/19) [byroot](https://github.com/byroot))\n\n### 1.5.0 (February 19th 2012) ###\n\n* adding Second Level Domain (SLD) Support - ([Issue #17](https://github.com/medialize/URI.js/issues/17))\n\n### 1.4.3 (January 28th 2012) ###\n\n* fixing global scope leakage - ([Issue #15](https://github.com/medialize/URI.js/issues/15) [mark-rushakoff](https://github.com/mark-rushakoff))\n\n### 1.4.2 (January 25th 2012) ###\n\n* improving CommonJS compatibility - ([Issue #14](https://github.com/medialize/URI.js/issues/14) [FGRibreau](https://github.com/FGRibreau))\n\n### 1.4.1 (January 21st 2012) ###\n\n* adding CommonJS compatibility - ([Issue #11](https://github.com/medialize/URI.js/issues/11), [Evangenieur](https://github.com/Evangenieur))\n\n### 1.4.0 (January 12th 2012) ###\n\n* adding [`URI.iso8859()`](http://medialize.github.com/URI.js/docs.html#static-iso8859) and [`URI.unicode()`](http://medialize.github.com/URI.js/docs.html#static-unicode) to switch base charsets - ([Issue #10](https://github.com/medialize/URI.js/issues/10), [mortenn](https://github.com/))\n* adding [`.iso8859()`](http://medialize.github.com/URI.js/docs.html#iso8859) and [`.unicode()`](http://medialize.github.com/URI.js/docs.html#unicode) to convert an URI's escape encoding\n\n### 1.3.1 (January 3rd 2011) ###\n\n* updating Punycode.js to version 0.3.0\n* adding edge-case tests (\"jim\")\n* fixing edge-cases in .protocol(), .port(), .subdomain(), .domain(), .tld(), .filename()\n* fixing parsing of hostname in [`.hostname()`](http://medialize.github.com/URI.js/docs.html#accessors-hostname)\n\n### 1.3.0 (December 30th 2011) ###\n\n* adding [`.subdomain()`](http://medialize.github.com/URI.js/docs.html#accessors-subdomain) convenience accessor\n* improving internal deferred build handling\n* fixing thrown Error for `URI(\"http://example.org\").query(true)` - ([Issue #6](https://github.com/medialize/URI.js/issues/6))\n* adding examples for extending URI.js for [fragment abuse](http://medialize.github.com/URI.js/docs.html#fragment-abuse), see src/URI.fragmentQuery.js and src/URI.fragmentURI.js - ([Issue #2](https://github.com/medialize/URI.js/issues/2))\n\n### 1.2.0 (December 29th 2011) ###\n\n* adding [`.equals()`](http://medialize.github.com/URI.js/docs.html#equals) for URL comparison\n* fixing encoding/decoding for [`.pathname()`](http://medialize.github.com/URI.js/docs.html#accessors-pathname), [`.directory()`](http://medialize.github.com/URI.js/docs.html#accessors-directory), [`.filename()`](http://medialize.github.com/URI.js/docs.html#accessors-filename) and [`.suffix()`](http://medialize.github.com/URI.js/docs.html#accessors-suffix) according to [RFC 3986 3.3](http://tools.ietf.org/html/rfc3986#section-3.3)\n* fixing escape spaces in query strings with `+` according to [application/x-www-form-urlencoded](http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type)\n* fixing to allow [`URI.buildQuery()`](http://medialize.github.com/URI.js/docs.html#static-buildQuery) to build duplicate key=value combinations\n* fixing [`URI(string, string)`](http://medialize.github.com/URI.js/docs.html#constructor) constructor to conform with the [specification](http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#constructor)\n* adding [`.readable()`](http://medialize.github.com/URI.js/docs.html#readable) for humanly readable representation of encoded URIs\n* fixing bug where @ in pathname would be parsed as part of the authority\n\n### 1.1.0 (December 28th 2011) ###\n\n* adding [`URI.withinString()`](http://medialize.github.com/URI.js/docs.html#static-withinString)\n* adding [`.normalizeProtocol()`](http://medialize.github.com/URI.js/docs.html#normalize-protocol) to lowercase protocols\n* fixing [`.normalizeHostname()`](http://medialize.github.com/URI.js/docs.html#normalize-host) to lowercase hostnames\n* fixing String.substr() to be replaced by String.substring() - ([Issue #1](https://github.com/medialize/URI.js/issues/1))\n* fixing parsing \"?foo\" to `{foo: null}` [Algorithm for collecting URL parameters](http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters)\n* fixing building `{foo: null, bar: \"\"}` to \"?foo&bar=\" [Algorithm for serializing URL parameters](http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#url-parameter-serialization)\n* fixing RegExp escaping\n\n### 1.0.0 (December 27th 2011) ###\n\n* Initial URI.js\n",
  "readmeFilename": "README.md",
  "_id": "URIjs@1.8.1",
  "_from": "URIjs"
}
